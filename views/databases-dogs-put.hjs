<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dogs Table</title>
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        h1 {
            text-align: center;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px auto;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
        }
        tr:nth-child(even) {
            background-color: #f2f2f2;
        }
        .button-container {
            text-align: center;
            margin-top: 20px;
        }
        .button {
            margin: 5px;
            padding: 10px 20px;
            background-color: #d3d3f7;
            color: #000;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
            transition: background-color 0.3s;
        }
        .button:hover {
            background-color: #a9a9d6;
        }
        .form-popup {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #f9f9f9;
            border: 1px solid #ccc;
            z-index: 9;
            padding: 20px;
            max-width: 300px;
        }
        .form-container {
            text-align: center;
        }
        .form-container input[type=text] {
            width: 100%;
            padding: 10px;
            margin: 5px 0 15px 0;
            border: none;
            background: #f1f1f1;
        }
        .form-container input[type=submit] {
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .form-container input[type=submit]:hover {
            background-color: #45a049;
        }
    </style>
</head>
<body>
    <h1>Which one do you want to update?</h1>
    <div id="dogsTableBody" class="button-container"></div>

    <div class="button-container">
        <a href="/databases/dogs" class="button">Back</a>
    </div>

    <div id="popupForm" class="form-popup">
        <form id="updateForm" class="form-container">
            <label for="origin"><b>Origin</b></label>
            <input type="text" name="origin" required>
            <label for="description"><b>Description</b></label>
            <input type="text" name="description" required>
            <input type="submit" value="Submit">
        </form>
    </div>

    <script>
        function openForm() {
            document.getElementById("popupForm").style.display = "block";
        }

        function closeForm() {
            document.getElementById("popupForm").style.display = "none";
        }

        fetch('/databases/dogs/get/alldogs')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(dogs => {
                const dogsTableBody = document.getElementById('dogsTableBody');
                dogs.forEach(dog => {
                    const button = document.createElement('button');
                    button.textContent = `${dog.breed}`;
                    button.className = 'button';
                    button.addEventListener('click', () => {
                        openForm();

                        document.getElementById('updateForm').onsubmit = function(event) {
                            event.preventDefault();
                            const origin = document.getElementsByName('origin')[0].value;
                            const description = document.getElementsByName('description')[0].value;
                            
                            const data = {
                                breed: dog.breed,
                                origin: origin,
                                description: description
                            };
                            
                            fetch('/databases/dogs/put/newdog', {
                                method: 'PUT',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify(data)
                            })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                window.location.href = '/databases/dogs/put/updated';
                            })
                            .catch(error => console.error('Error updating dog:', error));
                        };
                    });
                    dogsTableBody.appendChild(button);
                });
            })
            .catch(error => console.error('Error fetching dogs:', error));
    </script>
</body>
</html>
